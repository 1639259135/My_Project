<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanou.netctoss.service.dao.ServiceMapper">
  <resultMap id="ServiceBaseResultMap" type="com.lanou.netctoss.service.domain.Service">
    <constructor>
      <idArg column="service_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="account_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="unix_host" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="os_username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="login_passwd" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="pause_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="close_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="cost_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Service_Base_Column_List">
    se.service_id, se.account_id, unix_host, os_username, se.login_passwd, se.status,
    se.create_date, se.pause_date, se.close_date, se.cost_id
  </sql>

  <select id="findServiceCount" parameterType="com.lanou.netctoss.service.domain.ServicePage" resultType="int">
    SELECT COUNT(*)
    FROM service
    INNER JOIN cost
    ON cost.id = service.cost_id
    INNER JOIN account
    ON service.account_id = account.account_id
    <where>
      <if test="osUsername != null and osUsername != '' ">
        AND service.os_username = #{osUsername}
      </if>
      <if test="unixHost != null and unixHost != ''">
        and service.unix_host = #{unixHost}
      </if>
      <if test="status != null and status != '' and !status.equals('3')">
        and service.status = #{status}
      </if>
      <if test="idcardNo != null and idcardNo != ''">
        and account.idcard_no = #{idcardNo}
      </if>
    </where>
  </select>

  <sql id="account_service">
    ac.real_name,ac.idcard_no
  </sql>

  <sql id="cost_service">
    co.descr,co.name
  </sql>

  <resultMap id="service_account_cost" type="com.lanou.netctoss.service.domain.Service">
    <id column="service_id" property="serviceId"/>
    <result column="account_id" property="accountId"/>
    <result column="unix_host" property="unixHost"/>
    <result column="os_username" property="osUsername"/>
    <result column="login_passwd" property="loginPasswd"/>
    <result column="status" property="status"/>
    <result column="create_date" property="createDate"/>
    <result column="pause_date" property="pauseDate"/>
    <result column="close_date" property="closeDate"/>
    <result column="cost_id" property="costId"/>
    <association property="account" javaType="com.lanou.netctoss.account.domain.Account">
      <id column="account_id" property="accountId"/>
      <result column="real_name" property="realName"/>
      <result column="idcard_no" property="idcardNo"/>
    </association>
    <association property="cost" javaType="com.lanou.netctoss.cost.domain.Cost">
      <id column="id" property="id"/>
      <result column="name" property="name"/>
      <result column="descr" property="descr"/>
    </association>
  </resultMap>

  <select id="findServiceByPage" parameterType="com.lanou.netctoss.service.domain.ServicePage" resultMap="service_account_cost">
    SELECT *
    FROM (
      SELECT
      <include refid="Service_Base_Column_List"/>
      ,
      <include refid="account_service"/>
      ,
      <include refid="cost_service"/>
      FROM service se
      INNER JOIN account ac
      ON se.account_id = ac.account_id
      INNER JOIN cost co
      ON se.cost_id = co.id
      <where>
        <if test="osUsername != null and osUsername != '' ">
          AND se.os_username = #{osUsername}
        </if>
        <if test="unixHost != null and unixHost != ''">
          and se.unix_host = #{unixHost}
        </if>
        <if test="status != null and status != '' and !status.equals('3')">
          and se.status = #{status}
        </if>
        <if test="idcardNo != null and idcardNo != ''">
          and ac.idcard_no = #{idcardNo}
        </if>
      </where>
    ) s
    limit #{begin},#{num}
  </select>

<select id="findServiceMaxId" resultType="int">
  SELECT MAX(service_id) FROM service
</select>




  <select id="selectServiceByPrimaryKey" parameterType="java.lang.Integer" resultMap="service_account_cost">
    select
    <include refid="Service_Base_Column_List"/>
    ,
    <include refid="account_service"/>
    ,
    <include refid="cost_service"/>
    from service se
    INNER JOIN account ac
    ON se.account_id = ac.account_id
    INNER JOIN cost co
    ON se.cost_id = co.id
    where se.service_id = #{serviceId,jdbcType=INTEGER}
  </select>

  <delete id="deleteServiceByPrimaryKey" parameterType="java.lang.Integer">
    delete from service
    where service_id = #{serviceId,jdbcType=INTEGER}
  </delete>
  <insert id="insertService" parameterType="com.lanou.netctoss.service.domain.Service">
    insert into service (service_id, account_id, unix_host, 
      os_username, login_passwd, status, 
      create_date, pause_date, close_date, 
      cost_id)
    values (#{serviceId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{unixHost,jdbcType=VARCHAR}, 
      #{osUsername,jdbcType=VARCHAR}, #{loginPasswd,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{pauseDate,jdbcType=TIMESTAMP}, #{closeDate,jdbcType=TIMESTAMP}, 
      #{costId,jdbcType=INTEGER})
  </insert>

  <insert id="insertServiceSelective" parameterType="com.lanou.netctoss.service.domain.Service">
    insert into service
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="unixHost != null">
        unix_host,
      </if>
      <if test="osUsername != null">
        os_username,
      </if>
      <if test="loginPasswd != null">
        login_passwd,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="pauseDate != null">
        pause_date,
      </if>
      <if test="closeDate != null">
        close_date,
      </if>
      <if test="costId != null">
        cost_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="unixHost != null">
        #{unixHost,jdbcType=VARCHAR},
      </if>
      <if test="osUsername != null">
        #{osUsername,jdbcType=VARCHAR},
      </if>
      <if test="loginPasswd != null">
        #{loginPasswd,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="pauseDate != null">
        #{pauseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="closeDate != null">
        #{closeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="costId != null">
        #{costId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateServiceByPrimaryKeySelective" parameterType="com.lanou.netctoss.service.domain.Service">
    update service
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="unixHost != null">
        unix_host = #{unixHost,jdbcType=VARCHAR},
      </if>
      <if test="osUsername != null">
        os_username = #{osUsername,jdbcType=VARCHAR},
      </if>
      <if test="loginPasswd != null">
        login_passwd = #{loginPasswd,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="pauseDate != null">
        pause_date = #{pauseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="closeDate != null">
        close_date = #{closeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="costId != null">
        cost_id = #{costId,jdbcType=INTEGER},
      </if>
    </set>
    where service_id = #{serviceId,jdbcType=INTEGER}
  </update>
  <update id="updateServiceByPrimaryKey" parameterType="com.lanou.netctoss.service.domain.Service">
    update service
    set account_id = #{accountId,jdbcType=INTEGER},
      unix_host = #{unixHost,jdbcType=VARCHAR},
      os_username = #{osUsername,jdbcType=VARCHAR},
      login_passwd = #{loginPasswd,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      pause_date = #{pauseDate,jdbcType=TIMESTAMP},
      close_date = #{closeDate,jdbcType=TIMESTAMP},
      cost_id = #{costId,jdbcType=INTEGER}
    where service_id = #{serviceId,jdbcType=INTEGER}
  </update>

</mapper>